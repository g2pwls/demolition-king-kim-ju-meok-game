plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.e106'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// 메일 발송
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// 메일 발송시 redis 사용하기 위함
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Spring Security Session (Redis 기반으로 사용)
	implementation 'org.springframework.session:spring-session-data-redis'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// Swagger (springdoc-openapi)
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0"
	// MySQL Driver
	runtimeOnly 'com.mysql:mysql-connector-j'
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = 'app.jar'
}